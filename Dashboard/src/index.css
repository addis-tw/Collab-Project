/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
    ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *,
    :before,
    :after,
    ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
    }
  }
}

@layer theme {
  :root,
  :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
      'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      'Liberation Mono', 'Courier New', monospace;
    --color-red-100: oklch(0.936 0.032 17.717);
    --color-red-200: oklch(0.885 0.062 18.334);
    --color-red-300: oklch(0.808 0.114 19.571);
    --color-red-400: oklch(0.704 0.191 22.216);
    --color-red-500: oklch(0.637 0.237 25.331);
    --color-red-900: oklch(0.396 0.141 25.723);
    --color-amber-500: oklch(0.769 0.188 70.08);
    --color-amber-600: oklch(0.666 0.179 58.318);
    --color-yellow-100: oklch(0.973 0.071 103.193);
    --color-yellow-200: oklch(0.945 0.129 101.54);
    --color-yellow-300: oklch(0.905 0.182 98.111);
    --color-yellow-400: oklch(0.852 0.199 91.936);
    --color-yellow-500: oklch(0.795 0.184 86.047);
    --color-yellow-900: oklch(0.421 0.095 57.708);
    --color-green-100: oklch(0.962 0.044 156.743);
    --color-green-200: oklch(0.925 0.084 155.995);
    --color-green-300: oklch(0.871 0.15 154.449);
    --color-green-400: oklch(0.792 0.209 151.711);
    --color-green-500: oklch(0.723 0.219 149.579);
    --color-green-900: oklch(0.393 0.095 152.535);
    --color-emerald-500: oklch(0.696 0.17 162.48);
    --color-emerald-600: oklch(0.596 0.145 163.225);
    --color-cyan-400: oklch(0.789 0.154 211.53);
    --color-blue-200: oklch(0.882 0.059 254.128);
    --color-blue-400: oklch(0.707 0.165 254.624);
    --color-blue-500: oklch(0.623 0.214 259.815);
    --color-blue-950: oklch(0.282 0.091 267.935);
    --color-rose-500: oklch(0.645 0.246 16.439);
    --color-rose-600: oklch(0.586 0.253 17.585);
    --color-slate-900: oklch(0.208 0.042 265.755);
    /* --color-slate-900: oklch(0.645 0.246 16.439); */
    --color-slate-950: oklch(0.129 0.042 264.695);
    --color-gray-200: oklch(0.928 0.006 264.531);
    --color-gray-300: oklch(0.872 0.01 258.338);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-lg: 32rem;
    --container-2xl: 20rem;
    --container-4xl: 56rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-2xl: 1.5rem;
    --text-4xl: 3.875rem;
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl--line-height: calc(2 / 1.875);
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --radius-xs: 0.125rem;
    --blur-lg: 16px;
    --blur-xl: 24px;
    --default-transition-duration: 0.15s;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
  }
}

@layer base {
  *,
  :after,
  :before,
  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html,
  :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      'Apple Color Emoji',
      'Segoe UI Emoji',
      'Segoe UI Symbol',
      'Noto Color Emoji'
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    line-height: inherit;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b,
  strong {
    font-weight: bolder;
  }

  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      'Liberation Mono',
      'Courier New',
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub,
  sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -0.25em;
  }

  sup {
    top: -0.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol,
  ul,
  menu {
    list-style: none;
  }

  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    vertical-align: middle;
    display: block;
  }

  img,
  video {
    max-width: 100%;
    height: auto;
  }

  button,
  input,
  select,
  optgroup,
  textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
    color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button,
  input:where([type='button'], [type='reset'], [type='submit']) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    /* background-color: var(--background); */
    /* color: var(--foreground); */
  }

  :where(:not(:has([class*=' text-']), :not(:has([class^='text-'])))) h1 {
    font-size: var(--text-2xl);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=' text-']), :not(:has([class^='text-'])))) h2 {
    font-size: var(--text-xl);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=' text-']), :not(:has([class^='text-'])))) h3 {
    font-size: var(--text-lg);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=' text-']), :not(:has([class^='text-'])))) h4 {
    font-size: var(--text-base);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=' text-']), :not(:has([class^='text-'])))) p {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    line-height: 1.5;
  }

  :where(:not(:has([class*=' text-']), :not(:has([class^='text-'])))) label,
  :where(:not(:has([class*=' text-']), :not(:has([class^='text-'])))) button {
    font-size: var(--text-base);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=' text-']), :not(:has([class^='text-'])))) input {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    line-height: 1.5;
  }
}

@layer utilities {
  .\@container\/card-header {
    container: card-header / inline-size;
  }

  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-4 {
    top: calc(var(--spacing) * 4);
  }

  .top-\[50\%\] {
    top: 50%;
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-\[50\%\] {
    left: 50%;
  }

  .z-10 {
    z-index: 10;
  }

  .z-50 {
    z-index: 50;
  }

  .col-start-2 {
    grid-column-start: 2;
  }

  .row-span-2 {
    grid-row: span 2 / span 2;
  }

  .row-start-1 {
    grid-row-start: 1;
  }

  .-mx-6 {
    margin-inline: calc(var(--spacing) * -6);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .-mt-2 {
    margin-top: calc(var(--spacing) * -2);
  }

  .-mt-6 {
    margin-top: calc(var(--spacing) * -6);
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }

  .m-cus {
    /* margin: 1rem 3rem; */
    margin: 0.4rem 1rem;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .table {
    display: table;
  }

  .table-caption {
    display: table-caption;
  }

  .table-cell {
    display: table-cell;
  }

  .table-row {
    display: table-row;
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .h-1 {
    height: calc(var(--spacing) * 1);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-cus {
    /* height: calc(var(--spacing) * 40); */
    height: 4rem;
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-full {
    height: 100%;
  }

  .max-h-96 {
    max-height: calc(var(--spacing) * 96);
  }

  .max-h-\[80vh\] {
    max-height: 80vh;
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-full {
    width: 100%;
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-7xl {
    max-width: var(--container-7xl);
  }

  .max-w-\[calc\(100\%-2rem\)\] {
    max-width: calc(100% - 2rem);
  }

  .max-w-xs {
    max-width: var(--container-xs);
  }

  .caption-bottom {
    caption-side: bottom;
  }

  .translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-rotate-90 {
    rotate: -90deg;
  }

  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
      var(--tw-skew-x) var(--tw-skew-y);
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .auto-rows-min {
    grid-auto-rows: min-content;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-rows-\[auto_auto\] {
    grid-template-rows: auto auto;
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-col-reverse {
    flex-direction: column-reverse;
  }

  .items-center {
    align-items: center;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 3) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse))
    );
  }

  .self-start {
    align-self: flex-start;
  }

  .justify-self-end {
    justify-self: flex-end;
  }

  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .overflow-auto {
    overflow: auto;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-auto {
    overflow-x: auto;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius);
  }

  .rounded-xl {
    border-radius: calc(var(--radius) + 4px);
  }

  .rounded-xs {
    border-radius: var(--radius-xs);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-green-500\/30 {
    border-color: color-mix(
      in srgb,
      oklch(0.723 0.219 149.579) 30%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-500\/30 {
      border-color: color-mix(
        in oklab,
        var(--color-green-500) 30%,
        transparent
      );
    }
  }

  .border-red-500\/30 {
    border-color: color-mix(
      in srgb,
      oklch(0.637 0.237 25.331) 30%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-500\/30 {
      border-color: color-mix(in oklab, var(--color-red-500) 30%, transparent);
    }
  }

  .border-white\/10 {
    border-color: #ffffff1a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/10 {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .border-white\/20 {
    border-color: #fff3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/20 {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .border-yellow-500\/30 {
    border-color: color-mix(
      in srgb,
      oklch(0.795 0.184 86.047) 30%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-yellow-500\/30 {
      border-color: color-mix(
        in oklab,
        var(--color-yellow-500) 30%,
        transparent
      );
    }
  }

  .bg-background {
    background-color: var(--background);
  }

  .bg-black\/50 {
    background-color: #00000080;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/50 {
      background-color: color-mix(
        in oklab,
        var(--color-black) 50%,
        transparent
      );
    }
  }

  .bg-card {
    background-color: var(--card);
  }

  .bg-green-400 {
    background-color: var(--color-green-400);
  }

  .bg-green-500\/20 {
    background-color: color-mix(
      in srgb,
      oklch(0.723 0.219 149.579) 20%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-500\/20 {
      background-color: color-mix(
        in oklab,
        var(--color-green-500) 20%,
        transparent
      );
    }
  }

  .bg-green-900\/30 {
    background-color: color-mix(
      in srgb,
      oklch(0.393 0.095 152.535) 30%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-900\/30 {
      background-color: color-mix(
        in oklab,
        var(--color-green-900) 30%,
        transparent
      );
    }
  }

  .bg-muted\/50 {
    background-color: var(--muted);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-muted\/50 {
      background-color: color-mix(in oklab, var(--muted) 50%, transparent);
    }
  }

  .bg-red-400 {
    background-color: var(--color-red-400);
  }

  .bg-red-500\/20 {
    background-color: color-mix(
      in srgb,
      oklch(0.637 0.237 25.331) 20%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-500\/20 {
      background-color: color-mix(
        in oklab,
        var(--color-red-500) 20%,
        transparent
      );
    }
  }

  .bg-red-900\/30 {
    background-color: color-mix(
      in srgb,
      oklch(0.396 0.141 25.723) 30%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-900\/30 {
      background-color: color-mix(
        in oklab,
        var(--color-red-900) 30%,
        transparent
      );
    }
  }

  .bg-slate-800\/95 {
    background-color: color-mix(
      in srgb,
      oklch(0.279 0.041 260.031) 95%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-800\/95 {
      background-color: color-mix(
        in oklab,
        var(--color-slate-800) 95%,
        transparent
      );
    }
  }

  .bg-slate-900\/80 {
    background-color: color-mix(
      in srgb,
      oklch(0.208 0.042 265.755) 80%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-900\/80 {
      background-color: color-mix(
        in oklab,
        var(--color-slate-900) 80%,
        transparent
      );
    }
  }

  .bg-slate-900\/98 {
    background-color: color-mix(
      in srgb,
      oklch(0.208 0.042 265.755) 98%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-900\/98 {
      background-color: color-mix(
        in oklab,
        var(--color-slate-900) 98%,
        transparent
      );
    }
  }

  .bg-slate-900\/95 {
    background-color: color-mix(
      in srgb,
      oklch(0.208 0.042 265.755) 95%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-900\/95 {
      background-color: color-mix(
        in oklab,
        var(--color-slate-900) 95%,
        transparent
      );
    }
  }

  @media (hover: hover) {
    .hover\:bg-slate-800\/50:hover {
      background-color: color-mix(
        in srgb,
        oklch(0.279 0.041 260.031) 50%,
        transparent
      );
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-slate-800\/50:hover {
        background-color: color-mix(
          in oklab,
          var(--color-slate-800) 50%,
          transparent
        );
      }
    }
  }

  .bg-white\/5 {
    background-color: #ffffff0d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/5 {
      background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }

  .bg-white\/10 {
    background-color: #ffffff1a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/10 {
      background-color: color-mix(
        in oklab,
        var(--color-white) 10%,
        transparent
      );
    }
  }

  .bg-yellow-400 {
    background-color: var(--color-yellow-400);
  }

  .bg-yellow-500\/20 {
    background-color: color-mix(
      in srgb,
      oklch(0.795 0.184 86.047) 20%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-500\/20 {
      background-color: color-mix(
        in oklab,
        var(--color-yellow-500) 20%,
        transparent
      );
    }
  }

  .bg-yellow-900\/30 {
    background-color: color-mix(
      in srgb,
      oklch(0.421 0.095 57.708) 30%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-900\/30 {
      background-color: color-mix(
        in oklab,
        var(--color-yellow-900) 30%,
        transparent
      );
    }
  }

  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-br-page {
    background: #242424;
  }

  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-blue-500 {
    --tw-gradient-from: var(--color-blue-500);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  .from-green-500 {
    --tw-gradient-from: var(--color-green-500);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  .from-green-500\/20 {
    --tw-gradient-from: color-mix(
      in srgb,
      oklch(0.723 0.219 149.579) 20%,
      transparent
    );
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-green-500\/20 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-green-500) 20%,
        transparent
      );
    }
  }

  .from-red-500 {
    --tw-gradient-from: var(--color-red-500);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  .from-red-500\/20 {
    --tw-gradient-from: color-mix(
      in srgb,
      oklch(0.637 0.237 25.331) 20%,
      transparent
    );
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-red-500\/20 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-red-500) 20%,
        transparent
      );
    }
  }

  .from-slate-950 {
    --tw-gradient-from: var(--color-slate-950);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  .from-yellow-500 {
    --tw-gradient-from: var(--color-yellow-500);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  .from-yellow-500\/20 {
    --tw-gradient-from: color-mix(
      in srgb,
      oklch(0.795 0.184 86.047) 20%,
      transparent
    );
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-yellow-500\/20 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-yellow-500) 20%,
        transparent
      );
    }
  }

  .via-blue-950 {
    --tw-gradient-via: var(--color-blue-950);
    --tw-gradient-via-stops: var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .to-amber-500\/20 {
    --tw-gradient-to: color-mix(
      in srgb,
      oklch(0.769 0.188 70.08) 20%,
      transparent
    );
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-amber-500\/20 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-amber-500) 20%,
        transparent
      );
    }
  }

  .to-amber-600 {
    --tw-gradient-to: var(--color-amber-600);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  .to-cyan-400 {
    --tw-gradient-to: var(--color-cyan-400);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  .to-emerald-500\/20 {
    --tw-gradient-to: color-mix(
      in srgb,
      oklch(0.696 0.17 162.48) 20%,
      transparent
    );
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-emerald-500\/20 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-emerald-500) 20%,
        transparent
      );
    }
  }

  .to-emerald-600 {
    --tw-gradient-to: var(--color-emerald-600);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  .to-rose-500\/20 {
    --tw-gradient-to: color-mix(
      in srgb,
      oklch(0.645 0.246 16.439) 20%,
      transparent
    );
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-rose-500\/20 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-rose-500) 20%,
        transparent
      );
    }
  }

  .to-rose-600 {
    --tw-gradient-to: var(--color-rose-600);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  .to-slate-900 {
    --tw-gradient-to: var(--color-slate-900);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }

  .date-component {
    animation: fadeInDown 0.6s ease-out;
    transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;
  }

  .date-component:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 30px -10px rgba(59, 130, 246, 0.5);
  }

  /* Calendar Popover Styles */
  .date-component:active {
    transform: translateY(0);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .p-10 {
    padding: 2rem 12rem;
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }

  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }

  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .align-middle {
    vertical-align: middle;
  }

  .font-mono {
    font-family: var(--font-mono);
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-blue-200 {
    color: var(--color-blue-200);
  }

  .text-blue-400 {
    color: var(--color-blue-400);
  }

  .text-card-foreground {
    color: var(--card-foreground);
  }

  .text-foreground {
    color: var(--foreground);
  }

  .text-gray-200 {
    color: var(--color-gray-200);
  }

  .text-gray-300 {
    color: var(--color-gray-300);
  }

  .text-gray-400 {
    color: var(--color-gray-400);
  }

  .text-green-100 {
    color: var(--color-green-100);
  }

  .text-green-200 {
    color: var(--color-green-200);
  }

  .text-green-300 {
    color: var(--color-green-300);
  }

  .text-green-400 {
    color: var(--color-green-400);
  }

  .text-muted-foreground {
    color: var(--muted-foreground);
  }

  .text-red-100 {
    color: var(--color-red-100);
  }

  .text-red-200 {
    color: var(--color-red-200);
  }

  .text-red-300 {
    color: var(--color-red-300);
  }

  .text-red-400 {
    color: var(--color-red-400);
  }

  .text-white {
    color: var(--color-white);
  }

  .text-white\/10 {
    color: #ffffff1a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/10 {
      color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .text-yellow-100 {
    color: var(--color-yellow-100);
  }

  .text-yellow-200 {
    color: var(--color-yellow-200);
  }

  .text-yellow-300 {
    color: var(--color-yellow-300);
  }

  .text-yellow-400 {
    color: var(--color-yellow-400);
  }

  .opacity-70 {
    opacity: 0.7;
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a),
      0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a),
      0 8px 10px -6px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-blue-500\/30 {
    --tw-shadow-color: color-mix(
      in srgb,
      oklch(0.623 0.214 259.815) 30%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-blue-500\/30 {
      --tw-shadow-color: color-mix(
        in oklab,
        color-mix(in oklab, var(--color-blue-500) 30%, transparent)
          var(--tw-shadow-alpha),
        transparent
      );
    }
  }

  .shadow-yellow-400\/50 {
    --tw-shadow-color: color-mix(
      in srgb,
      oklch(0.852 0.199 91.936) 50%,
      transparent
    );
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-yellow-400\/50 {
      --tw-shadow-color: color-mix(
        in oklab,
        color-mix(in oklab, var(--color-yellow-400) 50%, transparent)
          var(--tw-shadow-alpha),
        transparent
      );
    }
  }

  .ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }

  .backdrop-blur-lg {
    --tw-backdrop-blur: blur(var(--blur-lg));
    -webkit-backdrop-filter: var(--tw-backdrop-blur)
      var(--tw-backdrop-brightness) var(--tw-backdrop-contrast)
      var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
      var(--tw-backdrop-invert) var(--tw-backdrop-opacity)
      var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
    backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
      var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
      var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
      var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
      var(--tw-backdrop-sepia);
  }

  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur)
      var(--tw-backdrop-brightness) var(--tw-backdrop-contrast)
      var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
      var(--tw-backdrop-invert) var(--tw-backdrop-opacity)
      var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
    backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
      var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
      var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
      var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
      var(--tw-backdrop-sepia);
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-200 {
    --tw-duration: 0.2s;
    transition-duration: 0.2s;
  }

  @media (hover: hover) {
    .hover\:bg-green-500\/30:hover {
      background-color: color-mix(
        in srgb,
        oklch(0.723 0.219 149.579) 30%,
        transparent
      );
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-green-500\/30:hover {
        background-color: color-mix(
          in oklab,
          var(--color-green-500) 30%,
          transparent
        );
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-muted\/50:hover {
      background-color: var(--muted);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-muted\/50:hover {
        background-color: color-mix(in oklab, var(--muted) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-500\/30:hover {
      background-color: color-mix(
        in srgb,
        oklch(0.637 0.237 25.331) 30%,
        transparent
      );
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-red-500\/30:hover {
        background-color: color-mix(
          in oklab,
          var(--color-red-500) 30%,
          transparent
        );
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/5:hover {
      background-color: #ffffff0d;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/5:hover {
        background-color: color-mix(
          in oklab,
          var(--color-white) 5%,
          transparent
        );
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-yellow-500\/30:hover {
      background-color: color-mix(
        in srgb,
        oklch(0.795 0.184 86.047) 30%,
        transparent
      );
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-yellow-500\/30:hover {
        background-color: color-mix(
          in oklab,
          var(--color-yellow-500) 30%,
          transparent
        );
      }
    }
  }

  @media (hover: hover) {
    .hover\:opacity-100:hover {
      opacity: 1;
    }
  }

  .focus\:ring-2:focus {
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
      calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus\:ring-ring:focus {
    --tw-ring-color: var(--ring);
  }

  .focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .focus\:outline-hidden:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .focus\:outline-hidden:focus {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has(
      [data-slot='card-action']
    ) {
    grid-template-columns: 1fr auto;
  }

  .data-\[state\=closed\]\:animate-out[data-state='closed'] {
    animation: exit var(--tw-duration, 0.15s) var(--tw-ease, ease);
  }

  .data-\[state\=closed\]\:fade-out-0[data-state='closed'] {
    --tw-exit-opacity: 0;
  }

  .data-\[state\=closed\]\:zoom-out-95[data-state='closed'] {
    --tw-exit-scale: 0.95;
  }

  .data-\[state\=open\]\:animate-in[data-state='open'] {
    animation: enter var(--tw-duration, 0.15s) var(--tw-ease, ease);
  }

  .data-\[state\=open\]\:bg-accent[data-state='open'] {
    background-color: var(--accent);
  }

  .data-\[state\=open\]\:text-muted-foreground[data-state='open'] {
    color: var(--muted-foreground);
  }

  .data-\[state\=open\]\:fade-in-0[data-state='open'] {
    --tw-enter-opacity: 0;
  }

  .data-\[state\=open\]\:zoom-in-95[data-state='open'] {
    --tw-enter-scale: 0.95;
  }

  .data-\[state\=selected\]\:bg-muted[data-state='selected'] {
    background-color: var(--muted);
  }

  @media (width >= 40rem) {
    .sm\:max-w-lg {
      max-width: var(--container-7xl);
    }
  }

  @media (width >= 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 40rem) {
    .sm\:justify-end {
      justify-content: flex-end;
    }
  }

  @media (width >= 40rem) {
    .sm\:text-left {
      text-align: left;
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-4 {
      /* grid-template-columns: repeat(4, minmax(0, 1fr)); */
      grid-template-columns: repeat(5, minmax(0, 20rem));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-4 {
      /* grid-template-columns: repeat(4, minmax(0, 1fr)); */
      grid-template-columns: repeat(5, minmax(0, 20rem));
    }
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*='size-']) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_tr\]\:border-b tr {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .\[\&_tr\:last-child\]\:border-0 tr:last-child {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0:has([role='checkbox']) {
    padding-right: calc(var(--spacing) * 0);
  }

  .\[\.border-b\]\:pb-6.border-b {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\.border-t\]\:pt-6.border-t {
    padding-top: calc(var(--spacing) * 6);
  }

  .\[\&\:last-child\]\:pb-6:last-child {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\&\>\[role\=checkbox\]\]\:translate-y-\[2px\] > [role='checkbox'] {
    --tw-translate-y: 2px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .\[\&\>tr\]\:last\:border-b-0 > tr:last-child {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0;
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes shimmer {
  from {
    transform: translateX(-100%);
  }

  to {
    transform: translateX(100%);
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}

@keyframes scaleUp {
  0%,
  100% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.2);
  }
}

@keyframes drawCircle {
  from {
    stroke-dashoffset: 201px;
  }

  to {
    stroke-dashoffset: var(--progress-offset);
  }
}

.flex-grow-2 {
  flex-grow: 2;
}

.justify-start {
  justify-content: flex-start;
}

.h-nav-logo {
  height: 6rem;
}

.w-2xl {
  /* width: var(--container-2xl); */
  width: 12rem;
}

.text-4xl {
  /* font-size: var(--text-4xl); */
  font-size: 1.4rem;
  line-height: var(--tw-leading, var(--text-4xl--line-height));
}

.header-animate {
  animation: 0.6s ease-out fadeInDown;
}

.stat-card-1 {
  animation: 0.5s ease-out 0.1s backwards scaleIn;
}

.stat-card-2 {
  animation: 0.5s ease-out 0.2s backwards scaleIn;
}

.stat-card-3 {
  animation: 0.5s ease-out 0.3s backwards scaleIn;
}

.stat-card-4 {
  animation: 0.5s ease-out 0.4s backwards scaleIn;
}

.card-animate-1 {
  animation: 0.5s ease-out 0.5s backwards fadeInUp;
}

.card-animate-2 {
  animation: 0.5s ease-out 0.6s backwards fadeInUp;
}

.card-animate-3 {
  animation: 0.5s ease-out 0.7s backwards fadeInUp;
}

.card-animate-4 {
  animation: 0.5s ease-out 0.8s backwards fadeInUp;
}

.status-card {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.status-card:hover {
  transform: translateY(-5px) scale(1.02);
}

.status-card-glow-green:hover {
  box-shadow: 0 20px 25px -5px #22c55e80, 0 10px 10px -5px #22c55e4d;
}

.status-card-glow-red:hover {
  box-shadow: 0 20px 25px -5px #ef444480, 0 10px 10px -5px #ef44444d;
}

.status-card-glow-yellow:hover {
  box-shadow: 0 20px 25px -5px #eab30880, 0 10px 10px -5px #eab3084d;
}

.shimmer-effect {
  position: relative;
  overflow: hidden;
}

.shimmer-effect:before {
  content: '';
  background: linear-gradient(90deg, #0000, #fff3, #0000);
  transition: transform;
  position: absolute;
  inset: 0;
  transform: translateX(-100%);
}

.shimmer-effect:hover:before {
  animation: 0.6s ease-out shimmer;
}

.icon-spin {
  transition: transform 0.6s ease-out;
}

.icon-spin:hover {
  transform: rotate(360deg);
}

.icon-spin-continuous {
  animation: 2s linear infinite spin;
}

.icon-pulse {
  animation: 0.5s ease-in-out infinite scaleUp;
}

.status-row {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.status-row:hover {
  transform: scale(1.02);
}

.total-badge {
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.total-badge:hover {
  transform: scale(1.1);
}

.progress-circle {
  stroke-dasharray: 201;
  stroke-dashoffset: 201px;
  transition: stroke-dashoffset 1s ease-out 0.5s;
}

.number-scale {
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.status-card:hover .number-scale {
  transform: scale(1.1);
}

.progress-bar {
  transition: width 0.8s ease-out;
}

.pulse-dot {
  animation: 2s cubic-bezier(0.4, 0, 0.6, 1) infinite pulse;
}

:root {
  --font-size: 16px;
  --background: #fff;
  --foreground: oklch(0.145 0 0);
  --card: #fff;
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: #030213;
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(0.95 0.0058 264.53);
  --secondary-foreground: #030213;
  --muted: #ececf0;
  --muted-foreground: #717182;
  --accent: #e9ebef;
  --accent-foreground: #030213;
  --destructive: #d4183d;
  --destructive-foreground: #fff;
  --border: #0000001a;
  --input: transparent;
  --input-background: #f3f3f5;
  --switch-background: #cbced4;
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --radius: 0.625rem;
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: #030213;
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.145 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.145 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.985 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.396 0.141 25.723);
  --destructive-foreground: oklch(0.637 0.237 25.331);
  --border: oklch(0.269 0 0);
  --input: oklch(0.269 0 0);
  --ring: oklch(0.439 0 0);
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(0.269 0 0);
  --sidebar-ring: oklch(0.439 0 0);
}

html {
  font-size: var(--font-size);
}

@property --tw-translate-x {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}

@property --tw-rotate-x {
  syntax: '*';
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: '*';
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: '*';
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: '*';
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: '*';
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-space-y-reverse {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: '*';
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: '*';
  inherits: false;
}

@property --tw-gradient-from {
  syntax: '<color>';
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: '<color>';
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: '<color>';
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: '*';
  inherits: false;
}

@property --tw-gradient-via-stops {
  syntax: '*';
  inherits: false;
}

@property --tw-gradient-from-position {
  syntax: '<length-percentage>';
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: '<length-percentage>';
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: '<length-percentage>';
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: '*';
  inherits: false;
}

@property --tw-font-weight {
  syntax: '*';
  inherits: false;
}

@property --tw-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: '*';
  inherits: false;
}

@property --tw-shadow-alpha {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: '*';
  inherits: false;
}

@property --tw-inset-shadow-alpha {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: '*';
  inherits: false;
}

@property --tw-ring-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: '*';
  inherits: false;
}

@property --tw-inset-ring-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: '*';
  inherits: false;
}

@property --tw-ring-offset-width {
  syntax: '<length>';
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: '*';
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-backdrop-blur {
  syntax: '*';
  inherits: false;
}

@property --tw-backdrop-brightness {
  syntax: '*';
  inherits: false;
}

@property --tw-backdrop-contrast {
  syntax: '*';
  inherits: false;
}

@property --tw-backdrop-grayscale {
  syntax: '*';
  inherits: false;
}

@property --tw-backdrop-hue-rotate {
  syntax: '*';
  inherits: false;
}

@property --tw-backdrop-invert {
  syntax: '*';
  inherits: false;
}

@property --tw-backdrop-opacity {
  syntax: '*';
  inherits: false;
}

@property --tw-backdrop-saturate {
  syntax: '*';
  inherits: false;
}

@property --tw-backdrop-sepia {
  syntax: '*';
  inherits: false;
}

@property --tw-duration {
  syntax: '*';
  inherits: false;
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(
        var(--tw-enter-translate-x, 0),
        var(--tw-enter-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1)
      )
      rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(
        var(--tw-exit-translate-x, 0),
        var(--tw-exit-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1)
      )
      rotate(var(--tw-exit-rotate, 0));
  }
}

/* virtual-fs:file:///styles/dashboard.css */
@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes shimmer {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(100%);
  }
}
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}
@keyframes scaleUp {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
}
@keyframes drawCircle {
  from {
    stroke-dashoffset: 201;
  }
  to {
    stroke-dashoffset: var(--progress-offset);
  }
}
.header-animate {
  animation: fadeInDown 0.6s ease-out;
}
.stat-card-1 {
  animation: scaleIn 0.5s ease-out 0.1s backwards;
}
.stat-card-2 {
  animation: scaleIn 0.5s ease-out 0.2s backwards;
}
.stat-card-3 {
  animation: scaleIn 0.5s ease-out 0.3s backwards;
}
.stat-card-4 {
  animation: scaleIn 0.5s ease-out 0.4s backwards;
}
.card-animate-1 {
  animation: fadeInUp 0.5s ease-out 0.5s backwards;
}
.card-animate-2 {
  animation: fadeInUp 0.5s ease-out 0.6s backwards;
}
.card-animate-3 {
  animation: fadeInUp 0.5s ease-out 0.7s backwards;
}
.card-animate-4 {
  animation: fadeInUp 0.5s ease-out 0.8s backwards;
}
.status-card {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}
.status-card:hover {
  transform: translateY(-5px) scale(1.02);
}
.status-card-glow-green:hover {
  box-shadow: 0 20px 25px -5px rgba(34, 197, 94, 0.5),
    0 10px 10px -5px rgba(34, 197, 94, 0.3);
}
.status-card-glow-red:hover {
  box-shadow: 0 20px 25px -5px rgba(239, 68, 68, 0.5),
    0 10px 10px -5px rgba(239, 68, 68, 0.3);
}
.status-card-glow-yellow:hover {
  box-shadow: 0 20px 25px -5px rgba(234, 179, 8, 0.5),
    0 10px 10px -5px rgba(234, 179, 8, 0.3);
}
.shimmer-effect {
  position: relative;
  overflow: hidden;
}
.shimmer-effect::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transform: translateX(-100%);
  transition: transform 0s;
}
.shimmer-effect:hover::before {
  animation: shimmer 0.6s ease-out;
}
.icon-spin {
  transition: transform 0.6s ease-out;
}
.icon-spin:hover {
  transform: rotate(360deg);
}
.icon-spin-continuous {
  animation: spin 2s linear infinite;
}
.icon-pulse {
  animation: scaleUp 0.5s ease-in-out infinite;
}
.status-row {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
.status-row:hover {
  transform: scale(1.02);
}
.total-badge {
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
.total-badge:hover {
  transform: scale(1.1);
}
.progress-circle {
  stroke-dasharray: 201;
  stroke-dashoffset: 201;
  transition: stroke-dashoffset 1s ease-out 0.5s;
}
.number-scale {
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
.status-card:hover .number-scale {
  transform: scale(1.1);
}
.progress-bar {
  transition: width 0.8s ease-out;
}
.pulse-dot {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.date-component {
  animation: fadeInDown 0.6s ease-out;
  transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;
}
.date-component:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 30px -10px rgba(59, 130, 246, 0.5);
}
.time-fade {
  animation: fadeIn 0.3s ease-in;
}
.date-component:active {
  transform: translateY(0);
}
[data-slot='popover-content'] {
  background: rgba(30, 41, 59, 0.95) !important;
  border-color: rgba(71, 85, 105, 0.5) !important;
  backdrop-filter: blur(20px);
}
[data-slot='popover-content'] button {
  color: rgb(203, 213, 225);
}
[data-slot='popover-content'] button:hover {
  background: rgba(59, 130, 246, 0.2);
  color: rgb(147, 197, 253);
}
[data-slot='popover-content'] button[aria-selected='true'] {
  background: rgba(59, 130, 246, 0.5) !important;
  color: white !important;
}
/*# sourceMappingURL=data:application/json;base64, */
